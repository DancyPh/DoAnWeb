#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DoAn.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLPizza")]
	public partial class QLPizzaDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertChamCong(ChamCong instance);
    partial void UpdateChamCong(ChamCong instance);
    partial void DeleteChamCong(ChamCong instance);
    partial void InsertChiTietDonHang(ChiTietDonHang instance);
    partial void UpdateChiTietDonHang(ChiTietDonHang instance);
    partial void DeleteChiTietDonHang(ChiTietDonHang instance);
    partial void InsertDatBan(DatBan instance);
    partial void UpdateDatBan(DatBan instance);
    partial void DeleteDatBan(DatBan instance);
    partial void InsertDonHang(DonHang instance);
    partial void UpdateDonHang(DonHang instance);
    partial void DeleteDonHang(DonHang instance);
    partial void InsertGiaoHang(GiaoHang instance);
    partial void UpdateGiaoHang(GiaoHang instance);
    partial void DeleteGiaoHang(GiaoHang instance);
    partial void InsertKhachHang(KhachHang instance);
    partial void UpdateKhachHang(KhachHang instance);
    partial void DeleteKhachHang(KhachHang instance);
    partial void InsertKichThuoc(KichThuoc instance);
    partial void UpdateKichThuoc(KichThuoc instance);
    partial void DeleteKichThuoc(KichThuoc instance);
    partial void InsertLoai(Loai instance);
    partial void UpdateLoai(Loai instance);
    partial void DeleteLoai(Loai instance);
    partial void InsertNhanVien(NhanVien instance);
    partial void UpdateNhanVien(NhanVien instance);
    partial void DeleteNhanVien(NhanVien instance);
    partial void InsertSanPham(SanPham instance);
    partial void UpdateSanPham(SanPham instance);
    partial void DeleteSanPham(SanPham instance);
    partial void InsertThanhPhan(ThanhPhan instance);
    partial void UpdateThanhPhan(ThanhPhan instance);
    partial void DeleteThanhPhan(ThanhPhan instance);
    partial void InsertThanhToan(ThanhToan instance);
    partial void UpdateThanhToan(ThanhToan instance);
    partial void DeleteThanhToan(ThanhToan instance);
    #endregion
		
		public QLPizzaDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["QLPizzaConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QLPizzaDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLPizzaDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLPizzaDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLPizzaDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ChamCong> ChamCongs
		{
			get
			{
				return this.GetTable<ChamCong>();
			}
		}
		
		public System.Data.Linq.Table<ChiTietDonHang> ChiTietDonHangs
		{
			get
			{
				return this.GetTable<ChiTietDonHang>();
			}
		}
		
		public System.Data.Linq.Table<DatBan> DatBans
		{
			get
			{
				return this.GetTable<DatBan>();
			}
		}
		
		public System.Data.Linq.Table<DonHang> DonHangs
		{
			get
			{
				return this.GetTable<DonHang>();
			}
		}
		
		public System.Data.Linq.Table<GiaoHang> GiaoHangs
		{
			get
			{
				return this.GetTable<GiaoHang>();
			}
		}
		
		public System.Data.Linq.Table<KhachHang> KhachHangs
		{
			get
			{
				return this.GetTable<KhachHang>();
			}
		}
		
		public System.Data.Linq.Table<KichThuoc> KichThuocs
		{
			get
			{
				return this.GetTable<KichThuoc>();
			}
		}
		
		public System.Data.Linq.Table<Loai> Loais
		{
			get
			{
				return this.GetTable<Loai>();
			}
		}
		
		public System.Data.Linq.Table<NhanVien> NhanViens
		{
			get
			{
				return this.GetTable<NhanVien>();
			}
		}
		
		public System.Data.Linq.Table<SanPham> SanPhams
		{
			get
			{
				return this.GetTable<SanPham>();
			}
		}
		
		public System.Data.Linq.Table<ThanhPhan> ThanhPhans
		{
			get
			{
				return this.GetTable<ThanhPhan>();
			}
		}
		
		public System.Data.Linq.Table<ThanhToan> ThanhToans
		{
			get
			{
				return this.GetTable<ThanhToan>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChamCong")]
	public partial class ChamCong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maChamCong;
		
		private int _maNhanVien;
		
		private System.Nullable<System.DateTime> _gioVao;
		
		private System.Nullable<System.DateTime> _gioRa;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaChamCongChanging(int value);
    partial void OnmaChamCongChanged();
    partial void OnmaNhanVienChanging(int value);
    partial void OnmaNhanVienChanged();
    partial void OngioVaoChanging(System.Nullable<System.DateTime> value);
    partial void OngioVaoChanged();
    partial void OngioRaChanging(System.Nullable<System.DateTime> value);
    partial void OngioRaChanged();
    #endregion
		
		public ChamCong()
		{
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maChamCong", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int maChamCong
		{
			get
			{
				return this._maChamCong;
			}
			set
			{
				if ((this._maChamCong != value))
				{
					this.OnmaChamCongChanging(value);
					this.SendPropertyChanging();
					this._maChamCong = value;
					this.SendPropertyChanged("maChamCong");
					this.OnmaChamCongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maNhanVien", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int maNhanVien
		{
			get
			{
				return this._maNhanVien;
			}
			set
			{
				if ((this._maNhanVien != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaNhanVienChanging(value);
					this.SendPropertyChanging();
					this._maNhanVien = value;
					this.SendPropertyChanged("maNhanVien");
					this.OnmaNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gioVao", DbType="DateTime")]
		public System.Nullable<System.DateTime> gioVao
		{
			get
			{
				return this._gioVao;
			}
			set
			{
				if ((this._gioVao != value))
				{
					this.OngioVaoChanging(value);
					this.SendPropertyChanging();
					this._gioVao = value;
					this.SendPropertyChanged("gioVao");
					this.OngioVaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gioRa", DbType="DateTime")]
		public System.Nullable<System.DateTime> gioRa
		{
			get
			{
				return this._gioRa;
			}
			set
			{
				if ((this._gioRa != value))
				{
					this.OngioRaChanging(value);
					this.SendPropertyChanging();
					this._gioRa = value;
					this.SendPropertyChanged("gioRa");
					this.OngioRaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_ChamCong", Storage="_NhanVien", ThisKey="maNhanVien", OtherKey="maNhanVien", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.ChamCongs.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.ChamCongs.Add(this);
						this._maNhanVien = value.maNhanVien;
					}
					else
					{
						this._maNhanVien = default(int);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietDonHang")]
	public partial class ChiTietDonHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maChiTietDonHang;
		
		private System.Nullable<int> _maDonHang;
		
		private System.Nullable<int> _maSanPham;
		
		private System.Nullable<int> _soLuong;
		
		private System.Nullable<decimal> _thanhTien;
		
		private EntityRef<DonHang> _DonHang;
		
		private EntityRef<SanPham> _SanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaChiTietDonHangChanging(int value);
    partial void OnmaChiTietDonHangChanged();
    partial void OnmaDonHangChanging(System.Nullable<int> value);
    partial void OnmaDonHangChanged();
    partial void OnmaSanPhamChanging(System.Nullable<int> value);
    partial void OnmaSanPhamChanged();
    partial void OnsoLuongChanging(System.Nullable<int> value);
    partial void OnsoLuongChanged();
    partial void OnthanhTienChanging(System.Nullable<decimal> value);
    partial void OnthanhTienChanged();
    #endregion
		
		public ChiTietDonHang()
		{
			this._DonHang = default(EntityRef<DonHang>);
			this._SanPham = default(EntityRef<SanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maChiTietDonHang", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int maChiTietDonHang
		{
			get
			{
				return this._maChiTietDonHang;
			}
			set
			{
				if ((this._maChiTietDonHang != value))
				{
					this.OnmaChiTietDonHangChanging(value);
					this.SendPropertyChanging();
					this._maChiTietDonHang = value;
					this.SendPropertyChanged("maChiTietDonHang");
					this.OnmaChiTietDonHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maDonHang", DbType="Int")]
		public System.Nullable<int> maDonHang
		{
			get
			{
				return this._maDonHang;
			}
			set
			{
				if ((this._maDonHang != value))
				{
					if (this._DonHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaDonHangChanging(value);
					this.SendPropertyChanging();
					this._maDonHang = value;
					this.SendPropertyChanged("maDonHang");
					this.OnmaDonHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maSanPham", DbType="Int")]
		public System.Nullable<int> maSanPham
		{
			get
			{
				return this._maSanPham;
			}
			set
			{
				if ((this._maSanPham != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaSanPhamChanging(value);
					this.SendPropertyChanging();
					this._maSanPham = value;
					this.SendPropertyChanged("maSanPham");
					this.OnmaSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_soLuong", DbType="Int")]
		public System.Nullable<int> soLuong
		{
			get
			{
				return this._soLuong;
			}
			set
			{
				if ((this._soLuong != value))
				{
					this.OnsoLuongChanging(value);
					this.SendPropertyChanging();
					this._soLuong = value;
					this.SendPropertyChanged("soLuong");
					this.OnsoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_thanhTien", DbType="Money")]
		public System.Nullable<decimal> thanhTien
		{
			get
			{
				return this._thanhTien;
			}
			set
			{
				if ((this._thanhTien != value))
				{
					this.OnthanhTienChanging(value);
					this.SendPropertyChanging();
					this._thanhTien = value;
					this.SendPropertyChanged("thanhTien");
					this.OnthanhTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonHang_ChiTietDonHang", Storage="_DonHang", ThisKey="maDonHang", OtherKey="maDonHang", IsForeignKey=true)]
		public DonHang DonHang
		{
			get
			{
				return this._DonHang.Entity;
			}
			set
			{
				DonHang previousValue = this._DonHang.Entity;
				if (((previousValue != value) 
							|| (this._DonHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DonHang.Entity = null;
						previousValue.ChiTietDonHangs.Remove(this);
					}
					this._DonHang.Entity = value;
					if ((value != null))
					{
						value.ChiTietDonHangs.Add(this);
						this._maDonHang = value.maDonHang;
					}
					else
					{
						this._maDonHang = default(Nullable<int>);
					}
					this.SendPropertyChanged("DonHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_ChiTietDonHang", Storage="_SanPham", ThisKey="maSanPham", OtherKey="maSanPham", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.ChiTietDonHangs.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.ChiTietDonHangs.Add(this);
						this._maSanPham = value.maSanPham;
					}
					else
					{
						this._maSanPham = default(Nullable<int>);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DatBan")]
	public partial class DatBan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maBanDat;
		
		private System.Nullable<int> _maKhachHang;
		
		private string _tenBan;
		
		private System.Nullable<System.DateTime> _ngayDat;
		
		private string _gioDen;
		
		private System.Nullable<int> _soLuong;
		
		private EntityRef<KhachHang> _KhachHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaBanDatChanging(int value);
    partial void OnmaBanDatChanged();
    partial void OnmaKhachHangChanging(System.Nullable<int> value);
    partial void OnmaKhachHangChanged();
    partial void OntenBanChanging(string value);
    partial void OntenBanChanged();
    partial void OnngayDatChanging(System.Nullable<System.DateTime> value);
    partial void OnngayDatChanged();
    partial void OngioDenChanging(string value);
    partial void OngioDenChanged();
    partial void OnsoLuongChanging(System.Nullable<int> value);
    partial void OnsoLuongChanged();
    #endregion
		
		public DatBan()
		{
			this._KhachHang = default(EntityRef<KhachHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maBanDat", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int maBanDat
		{
			get
			{
				return this._maBanDat;
			}
			set
			{
				if ((this._maBanDat != value))
				{
					this.OnmaBanDatChanging(value);
					this.SendPropertyChanging();
					this._maBanDat = value;
					this.SendPropertyChanged("maBanDat");
					this.OnmaBanDatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maKhachHang", DbType="Int")]
		public System.Nullable<int> maKhachHang
		{
			get
			{
				return this._maKhachHang;
			}
			set
			{
				if ((this._maKhachHang != value))
				{
					if (this._KhachHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaKhachHangChanging(value);
					this.SendPropertyChanging();
					this._maKhachHang = value;
					this.SendPropertyChanged("maKhachHang");
					this.OnmaKhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenBan", DbType="NVarChar(50)")]
		public string tenBan
		{
			get
			{
				return this._tenBan;
			}
			set
			{
				if ((this._tenBan != value))
				{
					this.OntenBanChanging(value);
					this.SendPropertyChanging();
					this._tenBan = value;
					this.SendPropertyChanged("tenBan");
					this.OntenBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngayDat", DbType="Date")]
		public System.Nullable<System.DateTime> ngayDat
		{
			get
			{
				return this._ngayDat;
			}
			set
			{
				if ((this._ngayDat != value))
				{
					this.OnngayDatChanging(value);
					this.SendPropertyChanging();
					this._ngayDat = value;
					this.SendPropertyChanged("ngayDat");
					this.OnngayDatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gioDen", DbType="NVarChar(50)")]
		public string gioDen
		{
			get
			{
				return this._gioDen;
			}
			set
			{
				if ((this._gioDen != value))
				{
					this.OngioDenChanging(value);
					this.SendPropertyChanging();
					this._gioDen = value;
					this.SendPropertyChanged("gioDen");
					this.OngioDenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_soLuong", DbType="Int")]
		public System.Nullable<int> soLuong
		{
			get
			{
				return this._soLuong;
			}
			set
			{
				if ((this._soLuong != value))
				{
					this.OnsoLuongChanging(value);
					this.SendPropertyChanging();
					this._soLuong = value;
					this.SendPropertyChanged("soLuong");
					this.OnsoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_DatBan", Storage="_KhachHang", ThisKey="maKhachHang", OtherKey="maKhachHang", IsForeignKey=true)]
		public KhachHang KhachHang
		{
			get
			{
				return this._KhachHang.Entity;
			}
			set
			{
				KhachHang previousValue = this._KhachHang.Entity;
				if (((previousValue != value) 
							|| (this._KhachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachHang.Entity = null;
						previousValue.DatBans.Remove(this);
					}
					this._KhachHang.Entity = value;
					if ((value != null))
					{
						value.DatBans.Add(this);
						this._maKhachHang = value.maKhachHang;
					}
					else
					{
						this._maKhachHang = default(Nullable<int>);
					}
					this.SendPropertyChanged("KhachHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DonHang")]
	public partial class DonHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maDonHang;
		
		private System.Nullable<int> _maKhachHang;
		
		private System.Nullable<System.DateTime> _ngayDatHang;
		
		private System.Nullable<decimal> _tongTien;
		
		private EntitySet<ChiTietDonHang> _ChiTietDonHangs;
		
		private EntitySet<GiaoHang> _GiaoHangs;
		
		private EntitySet<ThanhToan> _ThanhToans;
		
		private EntityRef<KhachHang> _KhachHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaDonHangChanging(int value);
    partial void OnmaDonHangChanged();
    partial void OnmaKhachHangChanging(System.Nullable<int> value);
    partial void OnmaKhachHangChanged();
    partial void OnngayDatHangChanging(System.Nullable<System.DateTime> value);
    partial void OnngayDatHangChanged();
    partial void OntongTienChanging(System.Nullable<decimal> value);
    partial void OntongTienChanged();
    #endregion
		
		public DonHang()
		{
			this._ChiTietDonHangs = new EntitySet<ChiTietDonHang>(new Action<ChiTietDonHang>(this.attach_ChiTietDonHangs), new Action<ChiTietDonHang>(this.detach_ChiTietDonHangs));
			this._GiaoHangs = new EntitySet<GiaoHang>(new Action<GiaoHang>(this.attach_GiaoHangs), new Action<GiaoHang>(this.detach_GiaoHangs));
			this._ThanhToans = new EntitySet<ThanhToan>(new Action<ThanhToan>(this.attach_ThanhToans), new Action<ThanhToan>(this.detach_ThanhToans));
			this._KhachHang = default(EntityRef<KhachHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maDonHang", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int maDonHang
		{
			get
			{
				return this._maDonHang;
			}
			set
			{
				if ((this._maDonHang != value))
				{
					this.OnmaDonHangChanging(value);
					this.SendPropertyChanging();
					this._maDonHang = value;
					this.SendPropertyChanged("maDonHang");
					this.OnmaDonHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maKhachHang", DbType="Int")]
		public System.Nullable<int> maKhachHang
		{
			get
			{
				return this._maKhachHang;
			}
			set
			{
				if ((this._maKhachHang != value))
				{
					if (this._KhachHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaKhachHangChanging(value);
					this.SendPropertyChanging();
					this._maKhachHang = value;
					this.SendPropertyChanged("maKhachHang");
					this.OnmaKhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngayDatHang", DbType="DateTime")]
		public System.Nullable<System.DateTime> ngayDatHang
		{
			get
			{
				return this._ngayDatHang;
			}
			set
			{
				if ((this._ngayDatHang != value))
				{
					this.OnngayDatHangChanging(value);
					this.SendPropertyChanging();
					this._ngayDatHang = value;
					this.SendPropertyChanged("ngayDatHang");
					this.OnngayDatHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tongTien", DbType="Money")]
		public System.Nullable<decimal> tongTien
		{
			get
			{
				return this._tongTien;
			}
			set
			{
				if ((this._tongTien != value))
				{
					this.OntongTienChanging(value);
					this.SendPropertyChanging();
					this._tongTien = value;
					this.SendPropertyChanged("tongTien");
					this.OntongTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonHang_ChiTietDonHang", Storage="_ChiTietDonHangs", ThisKey="maDonHang", OtherKey="maDonHang")]
		public EntitySet<ChiTietDonHang> ChiTietDonHangs
		{
			get
			{
				return this._ChiTietDonHangs;
			}
			set
			{
				this._ChiTietDonHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonHang_GiaoHang", Storage="_GiaoHangs", ThisKey="maDonHang", OtherKey="maDonHang")]
		public EntitySet<GiaoHang> GiaoHangs
		{
			get
			{
				return this._GiaoHangs;
			}
			set
			{
				this._GiaoHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonHang_ThanhToan", Storage="_ThanhToans", ThisKey="maDonHang", OtherKey="maDonHang")]
		public EntitySet<ThanhToan> ThanhToans
		{
			get
			{
				return this._ThanhToans;
			}
			set
			{
				this._ThanhToans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_DonHang", Storage="_KhachHang", ThisKey="maKhachHang", OtherKey="maKhachHang", IsForeignKey=true)]
		public KhachHang KhachHang
		{
			get
			{
				return this._KhachHang.Entity;
			}
			set
			{
				KhachHang previousValue = this._KhachHang.Entity;
				if (((previousValue != value) 
							|| (this._KhachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachHang.Entity = null;
						previousValue.DonHangs.Remove(this);
					}
					this._KhachHang.Entity = value;
					if ((value != null))
					{
						value.DonHangs.Add(this);
						this._maKhachHang = value.maKhachHang;
					}
					else
					{
						this._maKhachHang = default(Nullable<int>);
					}
					this.SendPropertyChanged("KhachHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietDonHangs(ChiTietDonHang entity)
		{
			this.SendPropertyChanging();
			entity.DonHang = this;
		}
		
		private void detach_ChiTietDonHangs(ChiTietDonHang entity)
		{
			this.SendPropertyChanging();
			entity.DonHang = null;
		}
		
		private void attach_GiaoHangs(GiaoHang entity)
		{
			this.SendPropertyChanging();
			entity.DonHang = this;
		}
		
		private void detach_GiaoHangs(GiaoHang entity)
		{
			this.SendPropertyChanging();
			entity.DonHang = null;
		}
		
		private void attach_ThanhToans(ThanhToan entity)
		{
			this.SendPropertyChanging();
			entity.DonHang = this;
		}
		
		private void detach_ThanhToans(ThanhToan entity)
		{
			this.SendPropertyChanging();
			entity.DonHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GiaoHang")]
	public partial class GiaoHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maGiaoHang;
		
		private System.Nullable<int> _maDonHang;
		
		private System.Nullable<System.DateTime> _ngayGiao;
		
		private string _diaChi;
		
		private EntityRef<DonHang> _DonHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaGiaoHangChanging(int value);
    partial void OnmaGiaoHangChanged();
    partial void OnmaDonHangChanging(System.Nullable<int> value);
    partial void OnmaDonHangChanged();
    partial void OnngayGiaoChanging(System.Nullable<System.DateTime> value);
    partial void OnngayGiaoChanged();
    partial void OndiaChiChanging(string value);
    partial void OndiaChiChanged();
    #endregion
		
		public GiaoHang()
		{
			this._DonHang = default(EntityRef<DonHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maGiaoHang", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int maGiaoHang
		{
			get
			{
				return this._maGiaoHang;
			}
			set
			{
				if ((this._maGiaoHang != value))
				{
					this.OnmaGiaoHangChanging(value);
					this.SendPropertyChanging();
					this._maGiaoHang = value;
					this.SendPropertyChanged("maGiaoHang");
					this.OnmaGiaoHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maDonHang", DbType="Int")]
		public System.Nullable<int> maDonHang
		{
			get
			{
				return this._maDonHang;
			}
			set
			{
				if ((this._maDonHang != value))
				{
					if (this._DonHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaDonHangChanging(value);
					this.SendPropertyChanging();
					this._maDonHang = value;
					this.SendPropertyChanged("maDonHang");
					this.OnmaDonHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngayGiao", DbType="Date")]
		public System.Nullable<System.DateTime> ngayGiao
		{
			get
			{
				return this._ngayGiao;
			}
			set
			{
				if ((this._ngayGiao != value))
				{
					this.OnngayGiaoChanging(value);
					this.SendPropertyChanging();
					this._ngayGiao = value;
					this.SendPropertyChanged("ngayGiao");
					this.OnngayGiaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diaChi", DbType="NVarChar(MAX)")]
		public string diaChi
		{
			get
			{
				return this._diaChi;
			}
			set
			{
				if ((this._diaChi != value))
				{
					this.OndiaChiChanging(value);
					this.SendPropertyChanging();
					this._diaChi = value;
					this.SendPropertyChanged("diaChi");
					this.OndiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonHang_GiaoHang", Storage="_DonHang", ThisKey="maDonHang", OtherKey="maDonHang", IsForeignKey=true)]
		public DonHang DonHang
		{
			get
			{
				return this._DonHang.Entity;
			}
			set
			{
				DonHang previousValue = this._DonHang.Entity;
				if (((previousValue != value) 
							|| (this._DonHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DonHang.Entity = null;
						previousValue.GiaoHangs.Remove(this);
					}
					this._DonHang.Entity = value;
					if ((value != null))
					{
						value.GiaoHangs.Add(this);
						this._maDonHang = value.maDonHang;
					}
					else
					{
						this._maDonHang = default(Nullable<int>);
					}
					this.SendPropertyChanged("DonHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhachHang")]
	public partial class KhachHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maKhachHang;
		
		private string _taiKhoan;
		
		private string _matKhau;
		
		private string _hoTen;
		
		private string _soDT;
		
		private string _diaChi;
		
		private EntitySet<DatBan> _DatBans;
		
		private EntitySet<DonHang> _DonHangs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaKhachHangChanging(int value);
    partial void OnmaKhachHangChanged();
    partial void OntaiKhoanChanging(string value);
    partial void OntaiKhoanChanged();
    partial void OnmatKhauChanging(string value);
    partial void OnmatKhauChanged();
    partial void OnhoTenChanging(string value);
    partial void OnhoTenChanged();
    partial void OnsoDTChanging(string value);
    partial void OnsoDTChanged();
    partial void OndiaChiChanging(string value);
    partial void OndiaChiChanged();
    #endregion
		
		public KhachHang()
		{
			this._DatBans = new EntitySet<DatBan>(new Action<DatBan>(this.attach_DatBans), new Action<DatBan>(this.detach_DatBans));
			this._DonHangs = new EntitySet<DonHang>(new Action<DonHang>(this.attach_DonHangs), new Action<DonHang>(this.detach_DonHangs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maKhachHang", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int maKhachHang
		{
			get
			{
				return this._maKhachHang;
			}
			set
			{
				if ((this._maKhachHang != value))
				{
					this.OnmaKhachHangChanging(value);
					this.SendPropertyChanging();
					this._maKhachHang = value;
					this.SendPropertyChanged("maKhachHang");
					this.OnmaKhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_taiKhoan", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string taiKhoan
		{
			get
			{
				return this._taiKhoan;
			}
			set
			{
				if ((this._taiKhoan != value))
				{
					this.OntaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._taiKhoan = value;
					this.SendPropertyChanged("taiKhoan");
					this.OntaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_matKhau", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string matKhau
		{
			get
			{
				return this._matKhau;
			}
			set
			{
				if ((this._matKhau != value))
				{
					this.OnmatKhauChanging(value);
					this.SendPropertyChanging();
					this._matKhau = value;
					this.SendPropertyChanged("matKhau");
					this.OnmatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hoTen", DbType="NVarChar(50)")]
		public string hoTen
		{
			get
			{
				return this._hoTen;
			}
			set
			{
				if ((this._hoTen != value))
				{
					this.OnhoTenChanging(value);
					this.SendPropertyChanging();
					this._hoTen = value;
					this.SendPropertyChanged("hoTen");
					this.OnhoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_soDT", DbType="NVarChar(11)")]
		public string soDT
		{
			get
			{
				return this._soDT;
			}
			set
			{
				if ((this._soDT != value))
				{
					this.OnsoDTChanging(value);
					this.SendPropertyChanging();
					this._soDT = value;
					this.SendPropertyChanged("soDT");
					this.OnsoDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diaChi", DbType="NVarChar(50)")]
		public string diaChi
		{
			get
			{
				return this._diaChi;
			}
			set
			{
				if ((this._diaChi != value))
				{
					this.OndiaChiChanging(value);
					this.SendPropertyChanging();
					this._diaChi = value;
					this.SendPropertyChanged("diaChi");
					this.OndiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_DatBan", Storage="_DatBans", ThisKey="maKhachHang", OtherKey="maKhachHang")]
		public EntitySet<DatBan> DatBans
		{
			get
			{
				return this._DatBans;
			}
			set
			{
				this._DatBans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_DonHang", Storage="_DonHangs", ThisKey="maKhachHang", OtherKey="maKhachHang")]
		public EntitySet<DonHang> DonHangs
		{
			get
			{
				return this._DonHangs;
			}
			set
			{
				this._DonHangs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DatBans(DatBan entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = this;
		}
		
		private void detach_DatBans(DatBan entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = null;
		}
		
		private void attach_DonHangs(DonHang entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = this;
		}
		
		private void detach_DonHangs(DonHang entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KichThuoc")]
	public partial class KichThuoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maKichThuoc;
		
		private string _tenKichThuoc;
		
		private System.Nullable<decimal> _gia;
		
		private EntitySet<SanPham> _SanPhams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaKichThuocChanging(int value);
    partial void OnmaKichThuocChanged();
    partial void OntenKichThuocChanging(string value);
    partial void OntenKichThuocChanged();
    partial void OngiaChanging(System.Nullable<decimal> value);
    partial void OngiaChanged();
    #endregion
		
		public KichThuoc()
		{
			this._SanPhams = new EntitySet<SanPham>(new Action<SanPham>(this.attach_SanPhams), new Action<SanPham>(this.detach_SanPhams));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maKichThuoc", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int maKichThuoc
		{
			get
			{
				return this._maKichThuoc;
			}
			set
			{
				if ((this._maKichThuoc != value))
				{
					this.OnmaKichThuocChanging(value);
					this.SendPropertyChanging();
					this._maKichThuoc = value;
					this.SendPropertyChanged("maKichThuoc");
					this.OnmaKichThuocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenKichThuoc", DbType="NVarChar(50)")]
		public string tenKichThuoc
		{
			get
			{
				return this._tenKichThuoc;
			}
			set
			{
				if ((this._tenKichThuoc != value))
				{
					this.OntenKichThuocChanging(value);
					this.SendPropertyChanging();
					this._tenKichThuoc = value;
					this.SendPropertyChanged("tenKichThuoc");
					this.OntenKichThuocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gia", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> gia
		{
			get
			{
				return this._gia;
			}
			set
			{
				if ((this._gia != value))
				{
					this.OngiaChanging(value);
					this.SendPropertyChanging();
					this._gia = value;
					this.SendPropertyChanged("gia");
					this.OngiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KichThuoc_SanPham", Storage="_SanPhams", ThisKey="maKichThuoc", OtherKey="maKichThuoc")]
		public EntitySet<SanPham> SanPhams
		{
			get
			{
				return this._SanPhams;
			}
			set
			{
				this._SanPhams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.KichThuoc = this;
		}
		
		private void detach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.KichThuoc = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Loai")]
	public partial class Loai : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maLoai;
		
		private string _tenLoai;
		
		private string _moTa;
		
		private EntitySet<SanPham> _SanPhams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaLoaiChanging(int value);
    partial void OnmaLoaiChanged();
    partial void OntenLoaiChanging(string value);
    partial void OntenLoaiChanged();
    partial void OnmoTaChanging(string value);
    partial void OnmoTaChanged();
    #endregion
		
		public Loai()
		{
			this._SanPhams = new EntitySet<SanPham>(new Action<SanPham>(this.attach_SanPhams), new Action<SanPham>(this.detach_SanPhams));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maLoai", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int maLoai
		{
			get
			{
				return this._maLoai;
			}
			set
			{
				if ((this._maLoai != value))
				{
					this.OnmaLoaiChanging(value);
					this.SendPropertyChanging();
					this._maLoai = value;
					this.SendPropertyChanged("maLoai");
					this.OnmaLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenLoai", DbType="NVarChar(50)")]
		public string tenLoai
		{
			get
			{
				return this._tenLoai;
			}
			set
			{
				if ((this._tenLoai != value))
				{
					this.OntenLoaiChanging(value);
					this.SendPropertyChanging();
					this._tenLoai = value;
					this.SendPropertyChanged("tenLoai");
					this.OntenLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_moTa", DbType="NVarChar(MAX)")]
		public string moTa
		{
			get
			{
				return this._moTa;
			}
			set
			{
				if ((this._moTa != value))
				{
					this.OnmoTaChanging(value);
					this.SendPropertyChanging();
					this._moTa = value;
					this.SendPropertyChanged("moTa");
					this.OnmoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Loai_SanPham", Storage="_SanPhams", ThisKey="maLoai", OtherKey="maLoai")]
		public EntitySet<SanPham> SanPhams
		{
			get
			{
				return this._SanPhams;
			}
			set
			{
				this._SanPhams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.Loai = this;
		}
		
		private void detach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.Loai = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhanVien")]
	public partial class NhanVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maNhanVien;
		
		private string _taiKhoan;
		
		private string _matKhau;
		
		private string _hoTen;
		
		private string _gioiTinh;
		
		private string _soDT;
		
		private string _chucVu;
		
		private EntitySet<ChamCong> _ChamCongs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaNhanVienChanging(int value);
    partial void OnmaNhanVienChanged();
    partial void OntaiKhoanChanging(string value);
    partial void OntaiKhoanChanged();
    partial void OnmatKhauChanging(string value);
    partial void OnmatKhauChanged();
    partial void OnhoTenChanging(string value);
    partial void OnhoTenChanged();
    partial void OngioiTinhChanging(string value);
    partial void OngioiTinhChanged();
    partial void OnsoDTChanging(string value);
    partial void OnsoDTChanged();
    partial void OnchucVuChanging(string value);
    partial void OnchucVuChanged();
    #endregion
		
		public NhanVien()
		{
			this._ChamCongs = new EntitySet<ChamCong>(new Action<ChamCong>(this.attach_ChamCongs), new Action<ChamCong>(this.detach_ChamCongs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maNhanVien", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int maNhanVien
		{
			get
			{
				return this._maNhanVien;
			}
			set
			{
				if ((this._maNhanVien != value))
				{
					this.OnmaNhanVienChanging(value);
					this.SendPropertyChanging();
					this._maNhanVien = value;
					this.SendPropertyChanged("maNhanVien");
					this.OnmaNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_taiKhoan", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string taiKhoan
		{
			get
			{
				return this._taiKhoan;
			}
			set
			{
				if ((this._taiKhoan != value))
				{
					this.OntaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._taiKhoan = value;
					this.SendPropertyChanged("taiKhoan");
					this.OntaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_matKhau", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string matKhau
		{
			get
			{
				return this._matKhau;
			}
			set
			{
				if ((this._matKhau != value))
				{
					this.OnmatKhauChanging(value);
					this.SendPropertyChanging();
					this._matKhau = value;
					this.SendPropertyChanged("matKhau");
					this.OnmatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hoTen", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string hoTen
		{
			get
			{
				return this._hoTen;
			}
			set
			{
				if ((this._hoTen != value))
				{
					this.OnhoTenChanging(value);
					this.SendPropertyChanging();
					this._hoTen = value;
					this.SendPropertyChanged("hoTen");
					this.OnhoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gioiTinh", DbType="NVarChar(10)")]
		public string gioiTinh
		{
			get
			{
				return this._gioiTinh;
			}
			set
			{
				if ((this._gioiTinh != value))
				{
					this.OngioiTinhChanging(value);
					this.SendPropertyChanging();
					this._gioiTinh = value;
					this.SendPropertyChanged("gioiTinh");
					this.OngioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_soDT", DbType="VarChar(11)")]
		public string soDT
		{
			get
			{
				return this._soDT;
			}
			set
			{
				if ((this._soDT != value))
				{
					this.OnsoDTChanging(value);
					this.SendPropertyChanging();
					this._soDT = value;
					this.SendPropertyChanged("soDT");
					this.OnsoDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_chucVu", DbType="NVarChar(50)")]
		public string chucVu
		{
			get
			{
				return this._chucVu;
			}
			set
			{
				if ((this._chucVu != value))
				{
					this.OnchucVuChanging(value);
					this.SendPropertyChanging();
					this._chucVu = value;
					this.SendPropertyChanged("chucVu");
					this.OnchucVuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_ChamCong", Storage="_ChamCongs", ThisKey="maNhanVien", OtherKey="maNhanVien")]
		public EntitySet<ChamCong> ChamCongs
		{
			get
			{
				return this._ChamCongs;
			}
			set
			{
				this._ChamCongs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChamCongs(ChamCong entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_ChamCongs(ChamCong entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SanPham")]
	public partial class SanPham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maSanPham;
		
		private string _tenSanPham;
		
		private System.Nullable<decimal> _gia;
		
		private string _mota;
		
		private string _hinhanh;
		
		private System.Nullable<int> _maLoai;
		
		private System.Nullable<int> _maKichThuoc;
		
		private System.Nullable<int> _maThanhPhan;
		
		private System.Nullable<int> _soLuong;
		
		private EntitySet<ChiTietDonHang> _ChiTietDonHangs;
		
		private EntityRef<KichThuoc> _KichThuoc;
		
		private EntityRef<Loai> _Loai;
		
		private EntityRef<ThanhPhan> _ThanhPhan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaSanPhamChanging(int value);
    partial void OnmaSanPhamChanged();
    partial void OntenSanPhamChanging(string value);
    partial void OntenSanPhamChanged();
    partial void OngiaChanging(System.Nullable<decimal> value);
    partial void OngiaChanged();
    partial void OnmotaChanging(string value);
    partial void OnmotaChanged();
    partial void OnhinhanhChanging(string value);
    partial void OnhinhanhChanged();
    partial void OnmaLoaiChanging(System.Nullable<int> value);
    partial void OnmaLoaiChanged();
    partial void OnmaKichThuocChanging(System.Nullable<int> value);
    partial void OnmaKichThuocChanged();
    partial void OnmaThanhPhanChanging(System.Nullable<int> value);
    partial void OnmaThanhPhanChanged();
    partial void OnsoLuongChanging(System.Nullable<int> value);
    partial void OnsoLuongChanged();
    #endregion
		
		public SanPham()
		{
			this._ChiTietDonHangs = new EntitySet<ChiTietDonHang>(new Action<ChiTietDonHang>(this.attach_ChiTietDonHangs), new Action<ChiTietDonHang>(this.detach_ChiTietDonHangs));
			this._KichThuoc = default(EntityRef<KichThuoc>);
			this._Loai = default(EntityRef<Loai>);
			this._ThanhPhan = default(EntityRef<ThanhPhan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maSanPham", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int maSanPham
		{
			get
			{
				return this._maSanPham;
			}
			set
			{
				if ((this._maSanPham != value))
				{
					this.OnmaSanPhamChanging(value);
					this.SendPropertyChanging();
					this._maSanPham = value;
					this.SendPropertyChanged("maSanPham");
					this.OnmaSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenSanPham", DbType="NVarChar(50)")]
		public string tenSanPham
		{
			get
			{
				return this._tenSanPham;
			}
			set
			{
				if ((this._tenSanPham != value))
				{
					this.OntenSanPhamChanging(value);
					this.SendPropertyChanging();
					this._tenSanPham = value;
					this.SendPropertyChanged("tenSanPham");
					this.OntenSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gia", DbType="Money")]
		public System.Nullable<decimal> gia
		{
			get
			{
				return this._gia;
			}
			set
			{
				if ((this._gia != value))
				{
					this.OngiaChanging(value);
					this.SendPropertyChanging();
					this._gia = value;
					this.SendPropertyChanged("gia");
					this.OngiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mota", DbType="NVarChar(500)")]
		public string mota
		{
			get
			{
				return this._mota;
			}
			set
			{
				if ((this._mota != value))
				{
					this.OnmotaChanging(value);
					this.SendPropertyChanging();
					this._mota = value;
					this.SendPropertyChanged("mota");
					this.OnmotaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hinhanh", DbType="NVarChar(50)")]
		public string hinhanh
		{
			get
			{
				return this._hinhanh;
			}
			set
			{
				if ((this._hinhanh != value))
				{
					this.OnhinhanhChanging(value);
					this.SendPropertyChanging();
					this._hinhanh = value;
					this.SendPropertyChanged("hinhanh");
					this.OnhinhanhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maLoai", DbType="Int")]
		public System.Nullable<int> maLoai
		{
			get
			{
				return this._maLoai;
			}
			set
			{
				if ((this._maLoai != value))
				{
					if (this._Loai.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaLoaiChanging(value);
					this.SendPropertyChanging();
					this._maLoai = value;
					this.SendPropertyChanged("maLoai");
					this.OnmaLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maKichThuoc", DbType="Int")]
		public System.Nullable<int> maKichThuoc
		{
			get
			{
				return this._maKichThuoc;
			}
			set
			{
				if ((this._maKichThuoc != value))
				{
					if (this._KichThuoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaKichThuocChanging(value);
					this.SendPropertyChanging();
					this._maKichThuoc = value;
					this.SendPropertyChanged("maKichThuoc");
					this.OnmaKichThuocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maThanhPhan", DbType="Int")]
		public System.Nullable<int> maThanhPhan
		{
			get
			{
				return this._maThanhPhan;
			}
			set
			{
				if ((this._maThanhPhan != value))
				{
					if (this._ThanhPhan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaThanhPhanChanging(value);
					this.SendPropertyChanging();
					this._maThanhPhan = value;
					this.SendPropertyChanged("maThanhPhan");
					this.OnmaThanhPhanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_soLuong", DbType="Int")]
		public System.Nullable<int> soLuong
		{
			get
			{
				return this._soLuong;
			}
			set
			{
				if ((this._soLuong != value))
				{
					this.OnsoLuongChanging(value);
					this.SendPropertyChanging();
					this._soLuong = value;
					this.SendPropertyChanged("soLuong");
					this.OnsoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_ChiTietDonHang", Storage="_ChiTietDonHangs", ThisKey="maSanPham", OtherKey="maSanPham")]
		public EntitySet<ChiTietDonHang> ChiTietDonHangs
		{
			get
			{
				return this._ChiTietDonHangs;
			}
			set
			{
				this._ChiTietDonHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KichThuoc_SanPham", Storage="_KichThuoc", ThisKey="maKichThuoc", OtherKey="maKichThuoc", IsForeignKey=true)]
		public KichThuoc KichThuoc
		{
			get
			{
				return this._KichThuoc.Entity;
			}
			set
			{
				KichThuoc previousValue = this._KichThuoc.Entity;
				if (((previousValue != value) 
							|| (this._KichThuoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KichThuoc.Entity = null;
						previousValue.SanPhams.Remove(this);
					}
					this._KichThuoc.Entity = value;
					if ((value != null))
					{
						value.SanPhams.Add(this);
						this._maKichThuoc = value.maKichThuoc;
					}
					else
					{
						this._maKichThuoc = default(Nullable<int>);
					}
					this.SendPropertyChanged("KichThuoc");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Loai_SanPham", Storage="_Loai", ThisKey="maLoai", OtherKey="maLoai", IsForeignKey=true)]
		public Loai Loai
		{
			get
			{
				return this._Loai.Entity;
			}
			set
			{
				Loai previousValue = this._Loai.Entity;
				if (((previousValue != value) 
							|| (this._Loai.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Loai.Entity = null;
						previousValue.SanPhams.Remove(this);
					}
					this._Loai.Entity = value;
					if ((value != null))
					{
						value.SanPhams.Add(this);
						this._maLoai = value.maLoai;
					}
					else
					{
						this._maLoai = default(Nullable<int>);
					}
					this.SendPropertyChanged("Loai");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThanhPhan_SanPham", Storage="_ThanhPhan", ThisKey="maThanhPhan", OtherKey="maThanhPhan", IsForeignKey=true)]
		public ThanhPhan ThanhPhan
		{
			get
			{
				return this._ThanhPhan.Entity;
			}
			set
			{
				ThanhPhan previousValue = this._ThanhPhan.Entity;
				if (((previousValue != value) 
							|| (this._ThanhPhan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ThanhPhan.Entity = null;
						previousValue.SanPhams.Remove(this);
					}
					this._ThanhPhan.Entity = value;
					if ((value != null))
					{
						value.SanPhams.Add(this);
						this._maThanhPhan = value.maThanhPhan;
					}
					else
					{
						this._maThanhPhan = default(Nullable<int>);
					}
					this.SendPropertyChanged("ThanhPhan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietDonHangs(ChiTietDonHang entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_ChiTietDonHangs(ChiTietDonHang entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ThanhPhan")]
	public partial class ThanhPhan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maThanhPhan;
		
		private string _tenThanhPhan;
		
		private System.Nullable<decimal> _gia;
		
		private EntitySet<SanPham> _SanPhams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaThanhPhanChanging(int value);
    partial void OnmaThanhPhanChanged();
    partial void OntenThanhPhanChanging(string value);
    partial void OntenThanhPhanChanged();
    partial void OngiaChanging(System.Nullable<decimal> value);
    partial void OngiaChanged();
    #endregion
		
		public ThanhPhan()
		{
			this._SanPhams = new EntitySet<SanPham>(new Action<SanPham>(this.attach_SanPhams), new Action<SanPham>(this.detach_SanPhams));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maThanhPhan", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int maThanhPhan
		{
			get
			{
				return this._maThanhPhan;
			}
			set
			{
				if ((this._maThanhPhan != value))
				{
					this.OnmaThanhPhanChanging(value);
					this.SendPropertyChanging();
					this._maThanhPhan = value;
					this.SendPropertyChanged("maThanhPhan");
					this.OnmaThanhPhanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenThanhPhan", DbType="NVarChar(50)")]
		public string tenThanhPhan
		{
			get
			{
				return this._tenThanhPhan;
			}
			set
			{
				if ((this._tenThanhPhan != value))
				{
					this.OntenThanhPhanChanging(value);
					this.SendPropertyChanging();
					this._tenThanhPhan = value;
					this.SendPropertyChanged("tenThanhPhan");
					this.OntenThanhPhanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gia", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> gia
		{
			get
			{
				return this._gia;
			}
			set
			{
				if ((this._gia != value))
				{
					this.OngiaChanging(value);
					this.SendPropertyChanging();
					this._gia = value;
					this.SendPropertyChanged("gia");
					this.OngiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThanhPhan_SanPham", Storage="_SanPhams", ThisKey="maThanhPhan", OtherKey="maThanhPhan")]
		public EntitySet<SanPham> SanPhams
		{
			get
			{
				return this._SanPhams;
			}
			set
			{
				this._SanPhams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.ThanhPhan = this;
		}
		
		private void detach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.ThanhPhan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ThanhToan")]
	public partial class ThanhToan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maThanhToan;
		
		private System.Nullable<int> _maDonHang;
		
		private System.Nullable<System.DateTime> _ngayThanhToan;
		
		private System.Nullable<bool> _phuongThuoc;
		
		private System.Nullable<decimal> _soTien;
		
		private EntityRef<DonHang> _DonHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaThanhToanChanging(int value);
    partial void OnmaThanhToanChanged();
    partial void OnmaDonHangChanging(System.Nullable<int> value);
    partial void OnmaDonHangChanged();
    partial void OnngayThanhToanChanging(System.Nullable<System.DateTime> value);
    partial void OnngayThanhToanChanged();
    partial void OnphuongThuocChanging(System.Nullable<bool> value);
    partial void OnphuongThuocChanged();
    partial void OnsoTienChanging(System.Nullable<decimal> value);
    partial void OnsoTienChanged();
    #endregion
		
		public ThanhToan()
		{
			this._DonHang = default(EntityRef<DonHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maThanhToan", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int maThanhToan
		{
			get
			{
				return this._maThanhToan;
			}
			set
			{
				if ((this._maThanhToan != value))
				{
					this.OnmaThanhToanChanging(value);
					this.SendPropertyChanging();
					this._maThanhToan = value;
					this.SendPropertyChanged("maThanhToan");
					this.OnmaThanhToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maDonHang", DbType="Int")]
		public System.Nullable<int> maDonHang
		{
			get
			{
				return this._maDonHang;
			}
			set
			{
				if ((this._maDonHang != value))
				{
					if (this._DonHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaDonHangChanging(value);
					this.SendPropertyChanging();
					this._maDonHang = value;
					this.SendPropertyChanged("maDonHang");
					this.OnmaDonHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngayThanhToan", DbType="DateTime")]
		public System.Nullable<System.DateTime> ngayThanhToan
		{
			get
			{
				return this._ngayThanhToan;
			}
			set
			{
				if ((this._ngayThanhToan != value))
				{
					this.OnngayThanhToanChanging(value);
					this.SendPropertyChanging();
					this._ngayThanhToan = value;
					this.SendPropertyChanged("ngayThanhToan");
					this.OnngayThanhToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phuongThuoc", DbType="Bit")]
		public System.Nullable<bool> phuongThuoc
		{
			get
			{
				return this._phuongThuoc;
			}
			set
			{
				if ((this._phuongThuoc != value))
				{
					this.OnphuongThuocChanging(value);
					this.SendPropertyChanging();
					this._phuongThuoc = value;
					this.SendPropertyChanged("phuongThuoc");
					this.OnphuongThuocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_soTien", DbType="Money")]
		public System.Nullable<decimal> soTien
		{
			get
			{
				return this._soTien;
			}
			set
			{
				if ((this._soTien != value))
				{
					this.OnsoTienChanging(value);
					this.SendPropertyChanging();
					this._soTien = value;
					this.SendPropertyChanged("soTien");
					this.OnsoTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonHang_ThanhToan", Storage="_DonHang", ThisKey="maDonHang", OtherKey="maDonHang", IsForeignKey=true)]
		public DonHang DonHang
		{
			get
			{
				return this._DonHang.Entity;
			}
			set
			{
				DonHang previousValue = this._DonHang.Entity;
				if (((previousValue != value) 
							|| (this._DonHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DonHang.Entity = null;
						previousValue.ThanhToans.Remove(this);
					}
					this._DonHang.Entity = value;
					if ((value != null))
					{
						value.ThanhToans.Add(this);
						this._maDonHang = value.maDonHang;
					}
					else
					{
						this._maDonHang = default(Nullable<int>);
					}
					this.SendPropertyChanged("DonHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
